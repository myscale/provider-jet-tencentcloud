---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: nodepools.nodepool.tencentcloud.jet.crossplane.io
spec:
  group: nodepool.tencentcloud.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - tencentcloudjet
    kind: NodePool
    listKind: NodePoolList
    plural: nodepools
    singular: nodepool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NodePool is the Schema for the NodePools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NodePoolSpec defines the desired state of NodePool
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoScalingConfig:
                    description: Auto scaling config parameters.
                    items:
                      properties:
                        backupInstanceTypes:
                          description: Backup CVM instance types if specified instance
                            type sold out or mismatch.
                          items:
                            type: string
                          type: array
                        bandwidthPackageId:
                          description: bandwidth package id. if user is standard user,
                            then the bandwidth_package_id is needed, or default has
                            bandwidth_package_id.
                          type: string
                        camRoleName:
                          description: Name of cam role.
                          type: string
                        dataDisk:
                          description: Configurations of data disk.
                          items:
                            properties:
                              deleteWithInstance:
                                description: Indicates whether the disk remove after
                                  instance terminated.
                                type: boolean
                              diskSize:
                                description: Volume of disk in GB. Default is `0`.
                                type: number
                              diskType:
                                description: 'Types of disk. Valid value: `CLOUD_PREMIUM`
                                  and `CLOUD_SSD`.'
                                type: string
                              encrypt:
                                description: 'Specify whether to encrypt data disk,
                                  default: false. NOTE: Make sure the instance type
                                  is offering and the cam role `QcloudKMSAccessForCVMRole`
                                  was provided.'
                                type: boolean
                              snapshotId:
                                description: Data disk snapshot ID.
                                type: string
                              throughputPerformance:
                                description: Add extra performance to the data disk.
                                  Only works when disk type is `CLOUD_TSSD` or `CLOUD_HSSD`
                                  and `data_size` > 460GB.
                                type: number
                            type: object
                          type: array
                        enhancedMonitorService:
                          description: To specify whether to enable cloud monitor
                            service. Default is TRUE.
                          type: boolean
                        enhancedSecurityService:
                          description: To specify whether to enable cloud security
                            service. Default is TRUE.
                          type: boolean
                        instanceChargeType:
                          description: 'Charge type of instance. Valid values are
                            `PREPAID`, `POSTPAID_BY_HOUR`, `SPOTPAID`. The default
                            is `POSTPAID_BY_HOUR`. NOTE: `SPOTPAID` instance must
                            set `spot_instance_type` and `spot_max_price` at the same
                            time.'
                          type: string
                        instanceChargeTypePrepaidPeriod:
                          description: 'The tenancy (in month) of the prepaid instance,
                            NOTE: it only works when instance_charge_type is set to
                            `PREPAID`. Valid values are `1`, `2`, `3`, `4`, `5`, `6`,
                            `7`, `8`, `9`, `10`, `11`, `12`, `24`, `36`.'
                          type: number
                        instanceChargeTypePrepaidRenewFlag:
                          description: 'Auto renewal flag. Valid values: `NOTIFY_AND_AUTO_RENEW`:
                            notify upon expiration and renew automatically, `NOTIFY_AND_MANUAL_RENEW`:
                            notify upon expiration but do not renew automatically,
                            `DISABLE_NOTIFY_AND_MANUAL_RENEW`: neither notify upon
                            expiration nor renew automatically. Default value: `NOTIFY_AND_MANUAL_RENEW`.
                            If this parameter is specified as `NOTIFY_AND_AUTO_RENEW`,
                            the instance will be automatically renewed on a monthly
                            basis if the account balance is sufficient. NOTE: it only
                            works when instance_charge_type is set to `PREPAID`.'
                          type: string
                        instanceType:
                          description: Specified types of CVM instance.
                          type: string
                        internetChargeType:
                          description: 'Charge types for network traffic. Valid value:
                            `BANDWIDTH_PREPAID`, `TRAFFIC_POSTPAID_BY_HOUR`, `TRAFFIC_POSTPAID_BY_HOUR`
                            and `BANDWIDTH_PACKAGE`.'
                          type: string
                        internetMaxBandwidthOut:
                          description: Max bandwidth of Internet access in Mbps. Default
                            is `0`.
                          type: number
                        keyIds:
                          description: ID list of keys.
                          items:
                            type: string
                          type: array
                        passwordSecretRef:
                          description: Password to access.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        publicIpAssigned:
                          description: Specify whether to assign an Internet IP address.
                          type: boolean
                        securityGroupIds:
                          description: Security groups to which a CVM instance belongs.
                          items:
                            type: string
                          type: array
                        spotInstanceType:
                          description: 'Type of spot instance, only support `one-time`
                            now. Note: it only works when instance_charge_type is
                            set to `SPOTPAID`.'
                          type: string
                        spotMaxPrice:
                          description: 'Max price of a spot instance, is the format
                            of decimal string, for example "0.50". Note: it only works
                            when instance_charge_type is set to `SPOTPAID`.'
                          type: string
                        systemDiskSize:
                          description: Volume of system disk in GB. Default is `50`.
                          type: number
                        systemDiskType:
                          description: 'Type of a CVM disk. Valid value: `CLOUD_PREMIUM`
                            and `CLOUD_SSD`. Default is `CLOUD_PREMIUM`.'
                          type: string
                      required:
                      - instanceType
                      type: object
                    type: array
                  clusterId:
                    description: ID of the cluster.
                    type: string
                  clusterIdRefs:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  clusterIdSelector:
                    description: A Selector selects an object.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  defaultCooldown:
                    description: Seconds of scaling group cool down. Default value
                      is `300`.
                    type: number
                  deleteKeepInstance:
                    description: Indicate to keep the CVM instance when delete the
                      node pool. Default is `true`.
                    type: boolean
                  desiredCapacity:
                    description: Desired capacity ot the node. If `enable_auto_scale`
                      is set `true`, this will be a computed parameter.
                    type: number
                  enableAutoScale:
                    description: Indicate whether to enable auto scaling or not.
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels of kubernetes node pool created nodes. The
                      label key name does not exceed 63 characters, only supports
                      English, numbers,'/','-', and does not allow beginning with
                      ('/').
                    type: object
                  maxSize:
                    description: Maximum number of node.
                    type: number
                  minSize:
                    description: Minimum number of node.
                    type: number
                  multiZoneSubnetPolicy:
                    description: 'Multi-availability zone/subnet policy. Valid values:
                      PRIORITY and EQUALITY. Default value: PRIORITY.'
                    type: string
                  name:
                    description: Name of the node pool. The name does not exceed 25
                      characters, and only supports Chinese, English, numbers, underscores,
                      separators (`-`) and decimal points.
                    type: string
                  nodeConfig:
                    description: Node config.
                    items:
                      properties:
                        dataDisk:
                          description: Configurations of data disk.
                          items:
                            properties:
                              autoFormatAndMount:
                                description: Indicate whether to auto format and mount
                                  or not. Default is `false`.
                                type: boolean
                              diskPartition:
                                description: 'The name of the device or partition
                                  to mount. NOTE: this argument doesn''t support setting
                                  in node pool, or will leads to mount error.'
                                type: string
                              diskSize:
                                description: Volume of disk in GB. Default is `0`.
                                type: number
                              diskType:
                                description: 'Types of disk, available values: `CLOUD_PREMIUM`
                                  and `CLOUD_SSD`.'
                                type: string
                              fileSystem:
                                description: File system, e.g. `ext3/ext4/xfs`.
                                type: string
                              mountTarget:
                                description: Mount target.
                                type: string
                            type: object
                          type: array
                        desiredPodNum:
                          description: Indicate to set desired pod number in node.
                            valid when the cluster is podCIDR.
                          type: number
                        dockerGraphPath:
                          description: Docker graph path. Default is `/var/lib/docker`.
                          type: string
                        extraArgs:
                          description: Custom parameter information related to the
                            node. This is a white-list parameter.
                          items:
                            type: string
                          type: array
                        isSchedule:
                          description: Indicate to schedule the adding node or not.
                            Default is true.
                          type: boolean
                        mountTarget:
                          description: Mount target. Default is not mounting.
                          type: string
                        userData:
                          description: Base64-encoded User Data text, the length limit
                            is 16KB.
                          type: string
                      type: object
                    type: array
                  nodeOs:
                    description: 'Operating system of the cluster, the available values
                      include: `tlinux2.4x86_64`, `ubuntu18.04.1x86_64`, `ubuntu16.04.1
                      LTSx86_64`, `centos7.6.0_x64` and `centos7.2x86_64`. Default
                      is ''tlinux2.4x86_64''. This parameter will only affect new
                      nodes, not including the existing nodes.'
                    type: string
                  nodeOsType:
                    description: The image version of the node. Valida values are
                      `DOCKER_CUSTOMIZE` and `GENERAL`. Default is `GENERAL`. This
                      parameter will only affect new nodes, not including the existing
                      nodes.
                    type: string
                  retryPolicy:
                    description: Available values for retry policies include `IMMEDIATE_RETRY`
                      and `INCREMENTAL_INTERVALS`.
                    type: string
                  scalingGroupName:
                    description: Name of relative scaling group.
                    type: string
                  scalingGroupProjectId:
                    description: Project ID the scaling group belongs to.
                    type: number
                  scalingMode:
                    description: Auto scaling mode. Valid values are `CLASSIC_SCALING`(scaling
                      by create/destroy instances), `WAKE_UP_STOPPED_SCALING`(Boot
                      priority for expansion. When expanding the capacity, the shutdown
                      operation is given priority to the shutdown of the instance.
                      If the number of instances is still lower than the expected
                      number of instances after the startup, the instance will be
                      created, and the method of destroying the instance will still
                      be used for shrinking).
                    type: string
                  subnetIdRefs:
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  subnetIdSelector:
                    description: A Selector selects an object.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  subnetIds:
                    description: ID list of subnet, and for VPC it is required.
                    items:
                      type: string
                    type: array
                  taints:
                    description: Taints of kubernetes node pool created nodes.
                    items:
                      properties:
                        effect:
                          description: 'Effect of the taint. Valid values are: `NoSchedule`,
                            `PreferNoSchedule`, `NoExecute`.'
                          type: string
                        key:
                          description: Key of the taint. The taint key name does not
                            exceed 63 characters, only supports English, numbers,'/','-',
                            and does not allow beginning with ('/').
                          type: string
                        value:
                          description: Value of the taint.
                          type: string
                      required:
                      - effect
                      - key
                      - value
                      type: object
                    type: array
                  terminationPolicies:
                    description: 'Policy of scaling group termination. Available values:
                      `["OLDEST_INSTANCE"]`, `["NEWEST_INSTANCE"]`.'
                    items:
                      type: string
                    type: array
                  unschedulable:
                    description: Sets whether the joining node participates in the
                      schedule. Default is '0'. Participate in scheduling.
                    type: number
                  vpcId:
                    description: ID of VPC network.
                    type: string
                  vpcIdRefs:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  vpcIdSelector:
                    description: A Selector selects an object.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  zones:
                    description: List of auto scaling group available zones, for Basic
                      network it is required.
                    items:
                      type: string
                    type: array
                required:
                - autoScalingConfig
                - maxSize
                - minSize
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: NodePoolStatus defines the observed state of NodePool.
            properties:
              atProvider:
                properties:
                  autoScalingGroupId:
                    type: string
                  autoscalingAddedTotal:
                    type: number
                  id:
                    type: string
                  launchConfigId:
                    type: string
                  manuallyAddedTotal:
                    type: number
                  nodeCount:
                    type: number
                  status:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
